{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "Framing_Align_script",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1dc4b3a9fbe645aaae5cab3981558714",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e514219f337349b6b2779f1f32f79788",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17cb34c4c6df4f26bcaf6e8170f57766",
          "Name": "geometry[]",
          "Description": "The element’s location",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Replication": "Auto",
      "Description": "Returns an element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7a10c57732c04ca3b2ef922fe0ac1d9a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fedd6ba016724e37a82716d4a688137b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b534d096d85a470daca0ec13de167e68",
          "Name": "geometry",
          "Description": "New Location Point or Curve\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b45bba420c3448949202dcf0b86394ce",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetLocation@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Update an existing element's location\n\nElement.SetLocation (geometry: Geometry): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "af34307cd6c7495692cacaf917e47315",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1bdb1f5d3d8845c594d4f864e917121e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f64f9ff9c9af4759869eadcdba7aa0f9",
          "Name": "geometry[]",
          "Description": "The element’s location",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Replication": "Auto",
      "Description": "Returns an element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c235ca457f7044e388a7e8e16c725376",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "8204150ceaea4d7b8937202ffc649723",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db8ab343f4fb4447b3863b2a540ec214",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "a[1];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5283ccc896af43b3b1bb98216fe255dd",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "50bde72120d14ec2afdd8aa5d1640b54",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21a25ca9e0a0405d9ada68a7cc56f94f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "a[0];"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nimport sys\r\n\r\n# Add references to WPF and Revit API\r\nclr.AddReference('PresentationCore')\r\nclr.AddReference('PresentationFramework')\r\nclr.AddReference('System.Windows.Forms')\r\nclr.AddReference('RevitServices')\r\nclr.AddReference('RevitAPI')\r\nclr.AddReference('RevitAPIUI')\r\n\r\nfrom System.Windows import Application, Window, Thickness\r\nfrom System.Windows.Controls import Button, StackPanel\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.UI import *\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Get the current Revit document and UI document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\n\r\n# Initialize lists to store selected elements\r\nfirst_selection = []\r\nsecond_selection = []\r\n\r\n# Define the WPF window\r\nclass ElementSelectionWindow(Window):\r\n    def __init__(self):\r\n        self.Title = \"Select Elements\"\r\n        self.Width = 300\r\n        self.Height = 150\r\n\r\n        # Create a StackPanel to hold the buttons\r\n        self.stack_panel = StackPanel()\r\n\r\n        # Create the \"Select First Set\" button\r\n        self.select_first_button = Button()\r\n        self.select_first_button.Content = \"Select beams to align\"\r\n        self.select_first_button.Margin = Thickness(10)\r\n        self.select_first_button.Click += self.on_select_first_button_click  # Attach event handler\r\n\r\n        # Create the \"Select Single Element\" button\r\n        self.select_second_button = Button()\r\n        self.select_second_button.Content = \"Select the example beam\"\r\n        self.select_second_button.Margin = Thickness(10)\r\n        self.select_second_button.Click += self.on_select_second_button_click  # Attach event handler\r\n\r\n        # Add buttons to the StackPanel\r\n        self.stack_panel.Children.Add(self.select_first_button)\r\n        self.stack_panel.Children.Add(self.select_second_button)\r\n\r\n        # Set the window content\r\n        self.Content = self.stack_panel\r\n\r\n    def on_select_first_button_click(self, sender, e):\r\n        # Close the window before starting the selection process\r\n        self.DialogResult = True\r\n        self.Close()\r\n\r\n    def on_select_second_button_click(self, sender, e):\r\n        # Close the window before starting the selection process\r\n        self.DialogResult = True\r\n        self.Close()\r\n\r\n# Function to handle element selection\r\ndef select_elements(prompt, allow_multiple=True):\r\n    # After the window is closed, start the selection process\r\n    try:\r\n        if allow_multiple:\r\n            # Prompt the user to select multiple elements\r\n            sel = uidoc.Selection.PickObjects(Selection.ObjectType.Element, prompt)\r\n            elements = [doc.GetElement(s.ElementId) for s in sel]\r\n        else:\r\n            # Prompt the user to select a single element\r\n            sel = uidoc.Selection.PickObject(Selection.ObjectType.Element, prompt)\r\n            elements = [doc.GetElement(sel.ElementId)]\r\n\r\n        return elements\r\n\r\n    except Exception as ex:\r\n        # Handle any errors\r\n        return \"An error occurred: \" + str(ex)\r\n\r\n# Create and show the WPF window\r\nwindow = ElementSelectionWindow()\r\nwindow.ShowDialog()  # This blocks until the window is closed\r\n\r\n# Determine which button was clicked\r\nif window.DialogResult == True:\r\n    # First selection: Multiple elements\r\n    first_selection = select_elements(\"Select the first set of elements\", allow_multiple=True)\r\n\r\n    # Reopen the window for the second selection\r\n    window = ElementSelectionWindow()\r\n    window.ShowDialog()\r\n\r\n    if window.DialogResult == True:\r\n        # Second selection: Single element\r\n        second_selection = select_elements(\"Select a single element\", allow_multiple=False)\r\n\r\n# Combine both selections into a single list\r\nif isinstance(first_selection, list) and isinstance(second_selection, list):\r\n    OUT = [first_selection, second_selection]\r\nelse:\r\n    OUT = \"Selection failed. Please try again.\"",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "8e2e236091954ffc871b4375c118c790",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "93cc02d822c840a3bff2eea2bf40e542",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42edeec3697b47ab8de69f81d6608047",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Assign inputs from Dynamo\r\nlist1 = IN[0]  # List of Dynamo lines (beams) to align\r\ntarget_line = IN[1]  # Target Dynamo line (beam) to match\r\n\r\ndef align_beams_to_target(list1, target_line):\r\n    \"\"\"\r\n    Aligns a list of beams (Dynamo lines) to match the start and end points of a target beam (Dynamo line),\r\n    while maintaining their spacing, parallelism, and Z-coordinate.\r\n\r\n    :param list1: List of Dynamo lines (beams) to align.\r\n    :param target_line: Target Dynamo line (beam) to match.\r\n    :return: List of aligned Dynamo lines.\r\n    \"\"\"\r\n    def is_horizontal(line):\r\n        \"\"\"Checks if a line is horizontal (Y coordinates of start and end points are the same).\"\"\"\r\n        return abs(line.StartPoint.Y - line.EndPoint.Y) < 1e-6  # Tolerance for floating-point comparison\r\n\r\n    def is_vertical(line):\r\n        \"\"\"Checks if a line is vertical (X coordinates of start and end points are the same).\"\"\"\r\n        return abs(line.StartPoint.X - line.EndPoint.X) < 1e-6  # Tolerance for floating-point comparison\r\n\r\n    def align_horizontal_beam(line, target_line):\r\n        \"\"\"Aligns a horizontal beam to the target beam by adjusting X coordinates.\"\"\"\r\n        # Get the start and end points of the target line\r\n        target_start = target_line.StartPoint\r\n        target_end = target_line.EndPoint\r\n\r\n        # Calculate the new start and end points for the line\r\n        new_start = Point.ByCoordinates(target_start.X, line.StartPoint.Y, line.StartPoint.Z)\r\n        new_end = Point.ByCoordinates(target_end.X, line.EndPoint.Y, line.EndPoint.Z)\r\n\r\n        # Create a new line with the aligned points\r\n        return Line.ByStartPointEndPoint(new_start, new_end)\r\n\r\n    def align_vertical_beam(line, target_line):\r\n        \"\"\"Aligns a vertical beam to the target beam by adjusting Y coordinates.\"\"\"\r\n        # Get the start and end points of the target line\r\n        target_start = target_line.StartPoint\r\n        target_end = target_line.EndPoint\r\n\r\n        # Calculate the new start and end points for the line\r\n        new_start = Point.ByCoordinates(line.StartPoint.X, target_start.Y, line.StartPoint.Z)\r\n        new_end = Point.ByCoordinates(line.EndPoint.X, target_end.Y, line.EndPoint.Z)\r\n\r\n        # Create a new line with the aligned points\r\n        return Line.ByStartPointEndPoint(new_start, new_end)\r\n\r\n    # Check if the target line is horizontal or vertical\r\n    if is_horizontal(target_line):\r\n        align_function = align_horizontal_beam\r\n    elif is_vertical(target_line):\r\n        align_function = align_vertical_beam\r\n    else:\r\n        raise ValueError(\"Target line is neither horizontal nor vertical.\")\r\n\r\n    # Align each beam in list1 to the target line\r\n    aligned_beams = []\r\n    for line in list1:\r\n        try:\r\n            # Align the beam to the target line\r\n            aligned_beam = align_function(line, target_line)\r\n            aligned_beams.append(aligned_beam)\r\n        except Exception as ex:\r\n            print(f\"Skipping invalid line: {ex}\")\r\n            continue\r\n\r\n    return aligned_beams\r\n\r\n# Align the beams\r\naligned_beams = align_beams_to_target(list1, target_line)\r\n\r\n# Output the aligned beams to Dynamo\r\nOUT = aligned_beams",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "0cbbca9ec4a141aa956750578b57101f",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "dd214cf89eb54ba1b45c47e03a50fc65",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94411043ffd34d7d87c16364998976b8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de239b332bd0422497b896d68e3c13e8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "647c57725d65418c9f017ad3d846bb8d",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "a599ffb15ae347c3b2c870c964e62c0e",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb52206ab9d84732839a9da059258a72",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "a[0];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "08c3e8cb13154e769a44ab3ac90f14cc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5533e50e4ec149c796cce7b59e561406",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "efed0fe6e5c44409a2be192c40e02c72",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6fbd87f76354509be26fbacb5b79d7c",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e669f3710e904981a05d8078b1fef66f",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ef5551029ece465c83b6bc0148e617c9",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e2a35ff0f3f44eaa40522917471d7aa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5b0748dc9cca4bcbb942cc891a60d5ad",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "945a7420d5d940b8b14af37cf0d0e9b5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Start Extension\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "12a2e61f0dbc4a3aacbe27f6db02f703",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8eb2eb647e86497e91fd00c09c85cd6b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f30c06d0646f4ee1839f5509ce7599e0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "dd1e61808d28438985672f67dbe7629b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "147ce8f2fa3541cb8982534ecbbe40dd",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f96dc9b814746569f14ff2373134b2c",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8982c1c4a38e4b0c93ca428c9200ae56",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8bba42124f9e4c539ff05cd897ae90f0",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ee152ffc4764e7984eb2e0e57f6b8a3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"End Extension\";"
    }
  ],
  "Connectors": [
    {
      "Start": "17cb34c4c6df4f26bcaf6e8170f57766",
      "End": "dd214cf89eb54ba1b45c47e03a50fc65",
      "Id": "a3c95cbca5c947b9825961d29576e613",
      "IsHidden": "False"
    },
    {
      "Start": "f64f9ff9c9af4759869eadcdba7aa0f9",
      "End": "a599ffb15ae347c3b2c870c964e62c0e",
      "Id": "24aa89a0eb0147b19e3176771e18d4be",
      "IsHidden": "False"
    },
    {
      "Start": "db8ab343f4fb4447b3863b2a540ec214",
      "End": "1bdb1f5d3d8845c594d4f864e917121e",
      "Id": "a11c1336af1a4f28b7afe68706935fc0",
      "IsHidden": "False"
    },
    {
      "Start": "21a25ca9e0a0405d9ada68a7cc56f94f",
      "End": "e514219f337349b6b2779f1f32f79788",
      "Id": "8655a781cd08459cb09257538cdb187f",
      "IsHidden": "False"
    },
    {
      "Start": "21a25ca9e0a0405d9ada68a7cc56f94f",
      "End": "fedd6ba016724e37a82716d4a688137b",
      "Id": "1cc946fd459c411c8551c629f19e0b14",
      "IsHidden": "False"
    },
    {
      "Start": "21a25ca9e0a0405d9ada68a7cc56f94f",
      "End": "5533e50e4ec149c796cce7b59e561406",
      "Id": "cbce657f591d4000a7e27eca0c84000d",
      "IsHidden": "False"
    },
    {
      "Start": "21a25ca9e0a0405d9ada68a7cc56f94f",
      "End": "dd1e61808d28438985672f67dbe7629b",
      "Id": "0c8270731b7e492eb69087212416a1c4",
      "IsHidden": "False"
    },
    {
      "Start": "42edeec3697b47ab8de69f81d6608047",
      "End": "50bde72120d14ec2afdd8aa5d1640b54",
      "Id": "e481693fa3da44febca76cf95e42f69e",
      "IsHidden": "False"
    },
    {
      "Start": "42edeec3697b47ab8de69f81d6608047",
      "End": "8204150ceaea4d7b8937202ffc649723",
      "Id": "88117e3d1c5a4aab9f98b52bb09c84ba",
      "IsHidden": "False"
    },
    {
      "Start": "de239b332bd0422497b896d68e3c13e8",
      "End": "b534d096d85a470daca0ec13de167e68",
      "Id": "8680ecb8253242ddbb129d7821d4cb03",
      "IsHidden": "False"
    },
    {
      "Start": "fb52206ab9d84732839a9da059258a72",
      "End": "94411043ffd34d7d87c16364998976b8",
      "Id": "c074a092124d43fab271089ecca4bd02",
      "IsHidden": "False"
    },
    {
      "Start": "4e2a35ff0f3f44eaa40522917471d7aa",
      "End": "b6fbd87f76354509be26fbacb5b79d7c",
      "Id": "8f129ee2bf85498d8acaadccea100cdc",
      "IsHidden": "False"
    },
    {
      "Start": "945a7420d5d940b8b14af37cf0d0e9b5",
      "End": "efed0fe6e5c44409a2be192c40e02c72",
      "Id": "6ef83320721b42e48d0b73ea6696e4b1",
      "IsHidden": "False"
    },
    {
      "Start": "8eb2eb647e86497e91fd00c09c85cd6b",
      "End": "3f96dc9b814746569f14ff2373134b2c",
      "Id": "b39a125f3b04435d9e3950b9002dcf32",
      "IsHidden": "False"
    },
    {
      "Start": "1ee152ffc4764e7984eb2e0e57f6b8a3",
      "End": "147ce8f2fa3541cb8982534ecbbe40dd",
      "Id": "13a41644ddf0437381e0fb862a3ebcf1",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "daniil.timin@gmail.com",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.0.3.7597",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "1dc4b3a9fbe645aaae5cab3981558714",
        "Name": "Element.GetLocation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 86.60539240579055,
        "Y": 295.89785639144264
      },
      {
        "Id": "7a10c57732c04ca3b2ef922fe0ac1d9a",
        "Name": "Element.SetLocation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 935.4499849726974,
        "Y": 142.47220431119192
      },
      {
        "Id": "af34307cd6c7495692cacaf917e47315",
        "Name": "Element.GetLocation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -74.07080969580386,
        "Y": 578.4478078986608
      },
      {
        "Id": "c235ca457f7044e388a7e8e16c725376",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -350.3219978475631,
        "Y": 554.6291716302045
      },
      {
        "Id": "5283ccc896af43b3b1bb98216fe255dd",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -252.77580046080368,
        "Y": 93.45554562516764
      },
      {
        "Id": "8e2e236091954ffc871b4375c118c790",
        "Name": "UI, Python 2 req",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -670.1533981771443,
        "Y": 392.1539118214354
      },
      {
        "Id": "0cbbca9ec4a141aa956750578b57101f",
        "Name": "AI rocks!",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 546.0379219867987,
        "Y": 420.3261095977184
      },
      {
        "Id": "647c57725d65418c9f017ad3d846bb8d",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 269.5117337254637,
        "Y": 578.1150053282233
      },
      {
        "Id": "08c3e8cb13154e769a44ab3ac90f14cc",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 254.11867731328198,
        "Y": -395.4735735368074
      },
      {
        "Id": "ef5551029ece465c83b6bc0148e617c9",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -104.07739109308784,
        "Y": -467.51473658636945
      },
      {
        "Id": "5b0748dc9cca4bcbb942cc891a60d5ad",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -70.0,
        "Y": -267.0
      },
      {
        "Id": "12a2e61f0dbc4a3aacbe27f6db02f703",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 577.118677313282,
        "Y": -375.4735735368074
      },
      {
        "Id": "f30c06d0646f4ee1839f5509ce7599e0",
        "Name": "Element.SetParameterByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 935.3147457196518,
        "Y": -303.43241048724536
      },
      {
        "Id": "8bba42124f9e4c539ff05cd897ae90f0",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 611.1960684063698,
        "Y": -174.95883695043796
      }
    ],
    "Annotations": [
      {
        "Id": "ac80731fefdf4ccc989917c3e72fd231",
        "Title": "what to align",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1dc4b3a9fbe645aaae5cab3981558714"
        ],
        "HasNestedGroups": false,
        "Left": 76.60539240579055,
        "Top": 222.89785639144264,
        "Width": 263.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 295.89785639144264,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0a236065fe11400d8ca9f1be24dc09b5",
        "Title": "target object",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "af34307cd6c7495692cacaf917e47315"
        ],
        "HasNestedGroups": false,
        "Left": -84.07080969580386,
        "Top": 505.4478078986608,
        "Width": 263.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 578.4478078986608,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9437fe8669d94ad2bfdb56f7d3e86e04",
        "Title": "remove start/end extensions",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "08c3e8cb13154e769a44ab3ac90f14cc",
          "ef5551029ece465c83b6bc0148e617c9",
          "5b0748dc9cca4bcbb942cc891a60d5ad",
          "12a2e61f0dbc4a3aacbe27f6db02f703",
          "f30c06d0646f4ee1839f5509ce7599e0",
          "8bba42124f9e4c539ff05cd897ae90f0"
        ],
        "HasNestedGroups": false,
        "Left": -114.07739109308784,
        "Top": -540.5147365863695,
        "Width": 1362.3921368127399,
        "Height": 497.55589963593155,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -467.51473658636945,
        "InitialHeight": 437.5558996359315,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 215.56737838957469,
    "Y": 9.835824440193676,
    "Zoom": 0.5633992526551055
  }
}